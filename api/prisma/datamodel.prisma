type User {
  id: ID! @id
  name: String! @unique
  password: String!
  admin: Boolean! @default(value: false)
  projects: [Project!]! @relation(name: "ProjectToUser", onDelete: SET_NULL)
  languages: [Language!]! @relation(name: "LanguageToUser", onDelete: SET_NULL)
}

type Project {
  id: ID! @id
  name: String! @unique
  git_repo: String!
  git_name: String!
  git_branch: String!
  git_path: String!
  users: [User!]! @relation(name: "ProjectToUser", onDelete: SET_NULL)
  languages: [Language!]! @relation(name: "LanguageToProject", onDelete: SET_NULL)
  translations: [Translation!]! @relation(name: "TranslationToProject", onDelete: CASCADE)
  literals: [Literal!]! @relation(name: "LiteralToProject", onDelete: CASCADE)
  main_language: String
}

type Language {
  id: ID! @id
  name: String!
  iso: String! @unique
  code: String!
  translations: [Translation!]! @relation(name: "TranslationToLanguage", onDelete: CASCADE)
}

type Translation {
  id: ID! @id
  language: Language! @relation(name: "TranslationToLanguage", onDelete: SET_NULL)
  literal: Literal! @relation(name: "TranslationToLiteral", onDelete: SET_NULL)
  project: Project! @relation(name: "TranslationToProject", onDelete: SET_NULL)
  translation: String!
}

type Literal {
  id: ID! @id
  project: Project! @relation(name: "LiteralToProject", onDelete: SET_NULL)
  translations: [Translation!]! @relation(name: "TranslationToLiteral", onDelete: CASCADE)
  literal: String!
  as_in: String!
}
