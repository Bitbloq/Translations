"use strict";
// Code generated by Prisma (prisma@1.34.2). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/
exports.__esModule = true;
exports.typeDefs = "type AggregateLanguage {\n  count: Int!\n}\n\ntype AggregateLiteral {\n  count: Int!\n}\n\ntype AggregateProject {\n  count: Int!\n}\n\ntype AggregateTranslation {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Language {\n  id: ID!\n  name: String!\n  iso: String!\n  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project!]\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  translations(where: TranslationWhereInput, orderBy: TranslationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Translation!]\n}\n\ntype LanguageConnection {\n  pageInfo: PageInfo!\n  edges: [LanguageEdge]!\n  aggregate: AggregateLanguage!\n}\n\ninput LanguageCreateInput {\n  id: ID\n  name: String!\n  iso: String!\n  projects: ProjectCreateManyWithoutLanguagesInput\n  users: UserCreateManyWithoutLanguagesInput\n  translations: TranslationCreateManyWithoutLanguageInput\n}\n\ninput LanguageCreateManyWithoutProjectsInput {\n  create: [LanguageCreateWithoutProjectsInput!]\n  connect: [LanguageWhereUniqueInput!]\n}\n\ninput LanguageCreateManyWithoutUsersInput {\n  create: [LanguageCreateWithoutUsersInput!]\n  connect: [LanguageWhereUniqueInput!]\n}\n\ninput LanguageCreateOneWithoutTranslationsInput {\n  create: LanguageCreateWithoutTranslationsInput\n  connect: LanguageWhereUniqueInput\n}\n\ninput LanguageCreateWithoutProjectsInput {\n  id: ID\n  name: String!\n  iso: String!\n  users: UserCreateManyWithoutLanguagesInput\n  translations: TranslationCreateManyWithoutLanguageInput\n}\n\ninput LanguageCreateWithoutTranslationsInput {\n  id: ID\n  name: String!\n  iso: String!\n  projects: ProjectCreateManyWithoutLanguagesInput\n  users: UserCreateManyWithoutLanguagesInput\n}\n\ninput LanguageCreateWithoutUsersInput {\n  id: ID\n  name: String!\n  iso: String!\n  projects: ProjectCreateManyWithoutLanguagesInput\n  translations: TranslationCreateManyWithoutLanguageInput\n}\n\ntype LanguageEdge {\n  node: Language!\n  cursor: String!\n}\n\nenum LanguageOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  iso_ASC\n  iso_DESC\n}\n\ntype LanguagePreviousValues {\n  id: ID!\n  name: String!\n  iso: String!\n}\n\ninput LanguageScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  iso: String\n  iso_not: String\n  iso_in: [String!]\n  iso_not_in: [String!]\n  iso_lt: String\n  iso_lte: String\n  iso_gt: String\n  iso_gte: String\n  iso_contains: String\n  iso_not_contains: String\n  iso_starts_with: String\n  iso_not_starts_with: String\n  iso_ends_with: String\n  iso_not_ends_with: String\n  AND: [LanguageScalarWhereInput!]\n  OR: [LanguageScalarWhereInput!]\n  NOT: [LanguageScalarWhereInput!]\n}\n\ntype LanguageSubscriptionPayload {\n  mutation: MutationType!\n  node: Language\n  updatedFields: [String!]\n  previousValues: LanguagePreviousValues\n}\n\ninput LanguageSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LanguageWhereInput\n  AND: [LanguageSubscriptionWhereInput!]\n  OR: [LanguageSubscriptionWhereInput!]\n  NOT: [LanguageSubscriptionWhereInput!]\n}\n\ninput LanguageUpdateInput {\n  name: String\n  iso: String\n  projects: ProjectUpdateManyWithoutLanguagesInput\n  users: UserUpdateManyWithoutLanguagesInput\n  translations: TranslationUpdateManyWithoutLanguageInput\n}\n\ninput LanguageUpdateManyDataInput {\n  name: String\n  iso: String\n}\n\ninput LanguageUpdateManyMutationInput {\n  name: String\n  iso: String\n}\n\ninput LanguageUpdateManyWithoutProjectsInput {\n  create: [LanguageCreateWithoutProjectsInput!]\n  delete: [LanguageWhereUniqueInput!]\n  connect: [LanguageWhereUniqueInput!]\n  set: [LanguageWhereUniqueInput!]\n  disconnect: [LanguageWhereUniqueInput!]\n  update: [LanguageUpdateWithWhereUniqueWithoutProjectsInput!]\n  upsert: [LanguageUpsertWithWhereUniqueWithoutProjectsInput!]\n  deleteMany: [LanguageScalarWhereInput!]\n  updateMany: [LanguageUpdateManyWithWhereNestedInput!]\n}\n\ninput LanguageUpdateManyWithoutUsersInput {\n  create: [LanguageCreateWithoutUsersInput!]\n  delete: [LanguageWhereUniqueInput!]\n  connect: [LanguageWhereUniqueInput!]\n  set: [LanguageWhereUniqueInput!]\n  disconnect: [LanguageWhereUniqueInput!]\n  update: [LanguageUpdateWithWhereUniqueWithoutUsersInput!]\n  upsert: [LanguageUpsertWithWhereUniqueWithoutUsersInput!]\n  deleteMany: [LanguageScalarWhereInput!]\n  updateMany: [LanguageUpdateManyWithWhereNestedInput!]\n}\n\ninput LanguageUpdateManyWithWhereNestedInput {\n  where: LanguageScalarWhereInput!\n  data: LanguageUpdateManyDataInput!\n}\n\ninput LanguageUpdateOneRequiredWithoutTranslationsInput {\n  create: LanguageCreateWithoutTranslationsInput\n  update: LanguageUpdateWithoutTranslationsDataInput\n  upsert: LanguageUpsertWithoutTranslationsInput\n  connect: LanguageWhereUniqueInput\n}\n\ninput LanguageUpdateWithoutProjectsDataInput {\n  name: String\n  iso: String\n  users: UserUpdateManyWithoutLanguagesInput\n  translations: TranslationUpdateManyWithoutLanguageInput\n}\n\ninput LanguageUpdateWithoutTranslationsDataInput {\n  name: String\n  iso: String\n  projects: ProjectUpdateManyWithoutLanguagesInput\n  users: UserUpdateManyWithoutLanguagesInput\n}\n\ninput LanguageUpdateWithoutUsersDataInput {\n  name: String\n  iso: String\n  projects: ProjectUpdateManyWithoutLanguagesInput\n  translations: TranslationUpdateManyWithoutLanguageInput\n}\n\ninput LanguageUpdateWithWhereUniqueWithoutProjectsInput {\n  where: LanguageWhereUniqueInput!\n  data: LanguageUpdateWithoutProjectsDataInput!\n}\n\ninput LanguageUpdateWithWhereUniqueWithoutUsersInput {\n  where: LanguageWhereUniqueInput!\n  data: LanguageUpdateWithoutUsersDataInput!\n}\n\ninput LanguageUpsertWithoutTranslationsInput {\n  update: LanguageUpdateWithoutTranslationsDataInput!\n  create: LanguageCreateWithoutTranslationsInput!\n}\n\ninput LanguageUpsertWithWhereUniqueWithoutProjectsInput {\n  where: LanguageWhereUniqueInput!\n  update: LanguageUpdateWithoutProjectsDataInput!\n  create: LanguageCreateWithoutProjectsInput!\n}\n\ninput LanguageUpsertWithWhereUniqueWithoutUsersInput {\n  where: LanguageWhereUniqueInput!\n  update: LanguageUpdateWithoutUsersDataInput!\n  create: LanguageCreateWithoutUsersInput!\n}\n\ninput LanguageWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  iso: String\n  iso_not: String\n  iso_in: [String!]\n  iso_not_in: [String!]\n  iso_lt: String\n  iso_lte: String\n  iso_gt: String\n  iso_gte: String\n  iso_contains: String\n  iso_not_contains: String\n  iso_starts_with: String\n  iso_not_starts_with: String\n  iso_ends_with: String\n  iso_not_ends_with: String\n  projects_every: ProjectWhereInput\n  projects_some: ProjectWhereInput\n  projects_none: ProjectWhereInput\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n  translations_every: TranslationWhereInput\n  translations_some: TranslationWhereInput\n  translations_none: TranslationWhereInput\n  AND: [LanguageWhereInput!]\n  OR: [LanguageWhereInput!]\n  NOT: [LanguageWhereInput!]\n}\n\ninput LanguageWhereUniqueInput {\n  id: ID\n  iso: String\n}\n\ntype Literal {\n  id: ID!\n  project: Project!\n  literal: String!\n  as_in: String!\n}\n\ntype LiteralConnection {\n  pageInfo: PageInfo!\n  edges: [LiteralEdge]!\n  aggregate: AggregateLiteral!\n}\n\ninput LiteralCreateInput {\n  id: ID\n  project: ProjectCreateOneWithoutLiteralsInput!\n  literal: String!\n  as_in: String!\n}\n\ninput LiteralCreateManyWithoutProjectInput {\n  create: [LiteralCreateWithoutProjectInput!]\n  connect: [LiteralWhereUniqueInput!]\n}\n\ninput LiteralCreateOneInput {\n  create: LiteralCreateInput\n  connect: LiteralWhereUniqueInput\n}\n\ninput LiteralCreateWithoutProjectInput {\n  id: ID\n  literal: String!\n  as_in: String!\n}\n\ntype LiteralEdge {\n  node: Literal!\n  cursor: String!\n}\n\nenum LiteralOrderByInput {\n  id_ASC\n  id_DESC\n  literal_ASC\n  literal_DESC\n  as_in_ASC\n  as_in_DESC\n}\n\ntype LiteralPreviousValues {\n  id: ID!\n  literal: String!\n  as_in: String!\n}\n\ninput LiteralScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  literal: String\n  literal_not: String\n  literal_in: [String!]\n  literal_not_in: [String!]\n  literal_lt: String\n  literal_lte: String\n  literal_gt: String\n  literal_gte: String\n  literal_contains: String\n  literal_not_contains: String\n  literal_starts_with: String\n  literal_not_starts_with: String\n  literal_ends_with: String\n  literal_not_ends_with: String\n  as_in: String\n  as_in_not: String\n  as_in_in: [String!]\n  as_in_not_in: [String!]\n  as_in_lt: String\n  as_in_lte: String\n  as_in_gt: String\n  as_in_gte: String\n  as_in_contains: String\n  as_in_not_contains: String\n  as_in_starts_with: String\n  as_in_not_starts_with: String\n  as_in_ends_with: String\n  as_in_not_ends_with: String\n  AND: [LiteralScalarWhereInput!]\n  OR: [LiteralScalarWhereInput!]\n  NOT: [LiteralScalarWhereInput!]\n}\n\ntype LiteralSubscriptionPayload {\n  mutation: MutationType!\n  node: Literal\n  updatedFields: [String!]\n  previousValues: LiteralPreviousValues\n}\n\ninput LiteralSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LiteralWhereInput\n  AND: [LiteralSubscriptionWhereInput!]\n  OR: [LiteralSubscriptionWhereInput!]\n  NOT: [LiteralSubscriptionWhereInput!]\n}\n\ninput LiteralUpdateDataInput {\n  project: ProjectUpdateOneRequiredWithoutLiteralsInput\n  literal: String\n  as_in: String\n}\n\ninput LiteralUpdateInput {\n  project: ProjectUpdateOneRequiredWithoutLiteralsInput\n  literal: String\n  as_in: String\n}\n\ninput LiteralUpdateManyDataInput {\n  literal: String\n  as_in: String\n}\n\ninput LiteralUpdateManyMutationInput {\n  literal: String\n  as_in: String\n}\n\ninput LiteralUpdateManyWithoutProjectInput {\n  create: [LiteralCreateWithoutProjectInput!]\n  delete: [LiteralWhereUniqueInput!]\n  connect: [LiteralWhereUniqueInput!]\n  set: [LiteralWhereUniqueInput!]\n  disconnect: [LiteralWhereUniqueInput!]\n  update: [LiteralUpdateWithWhereUniqueWithoutProjectInput!]\n  upsert: [LiteralUpsertWithWhereUniqueWithoutProjectInput!]\n  deleteMany: [LiteralScalarWhereInput!]\n  updateMany: [LiteralUpdateManyWithWhereNestedInput!]\n}\n\ninput LiteralUpdateManyWithWhereNestedInput {\n  where: LiteralScalarWhereInput!\n  data: LiteralUpdateManyDataInput!\n}\n\ninput LiteralUpdateOneRequiredInput {\n  create: LiteralCreateInput\n  update: LiteralUpdateDataInput\n  upsert: LiteralUpsertNestedInput\n  connect: LiteralWhereUniqueInput\n}\n\ninput LiteralUpdateWithoutProjectDataInput {\n  literal: String\n  as_in: String\n}\n\ninput LiteralUpdateWithWhereUniqueWithoutProjectInput {\n  where: LiteralWhereUniqueInput!\n  data: LiteralUpdateWithoutProjectDataInput!\n}\n\ninput LiteralUpsertNestedInput {\n  update: LiteralUpdateDataInput!\n  create: LiteralCreateInput!\n}\n\ninput LiteralUpsertWithWhereUniqueWithoutProjectInput {\n  where: LiteralWhereUniqueInput!\n  update: LiteralUpdateWithoutProjectDataInput!\n  create: LiteralCreateWithoutProjectInput!\n}\n\ninput LiteralWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  project: ProjectWhereInput\n  literal: String\n  literal_not: String\n  literal_in: [String!]\n  literal_not_in: [String!]\n  literal_lt: String\n  literal_lte: String\n  literal_gt: String\n  literal_gte: String\n  literal_contains: String\n  literal_not_contains: String\n  literal_starts_with: String\n  literal_not_starts_with: String\n  literal_ends_with: String\n  literal_not_ends_with: String\n  as_in: String\n  as_in_not: String\n  as_in_in: [String!]\n  as_in_not_in: [String!]\n  as_in_lt: String\n  as_in_lte: String\n  as_in_gt: String\n  as_in_gte: String\n  as_in_contains: String\n  as_in_not_contains: String\n  as_in_starts_with: String\n  as_in_not_starts_with: String\n  as_in_ends_with: String\n  as_in_not_ends_with: String\n  AND: [LiteralWhereInput!]\n  OR: [LiteralWhereInput!]\n  NOT: [LiteralWhereInput!]\n}\n\ninput LiteralWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createLanguage(data: LanguageCreateInput!): Language!\n  updateLanguage(data: LanguageUpdateInput!, where: LanguageWhereUniqueInput!): Language\n  updateManyLanguages(data: LanguageUpdateManyMutationInput!, where: LanguageWhereInput): BatchPayload!\n  upsertLanguage(where: LanguageWhereUniqueInput!, create: LanguageCreateInput!, update: LanguageUpdateInput!): Language!\n  deleteLanguage(where: LanguageWhereUniqueInput!): Language\n  deleteManyLanguages(where: LanguageWhereInput): BatchPayload!\n  createLiteral(data: LiteralCreateInput!): Literal!\n  updateLiteral(data: LiteralUpdateInput!, where: LiteralWhereUniqueInput!): Literal\n  updateManyLiterals(data: LiteralUpdateManyMutationInput!, where: LiteralWhereInput): BatchPayload!\n  upsertLiteral(where: LiteralWhereUniqueInput!, create: LiteralCreateInput!, update: LiteralUpdateInput!): Literal!\n  deleteLiteral(where: LiteralWhereUniqueInput!): Literal\n  deleteManyLiterals(where: LiteralWhereInput): BatchPayload!\n  createProject(data: ProjectCreateInput!): Project!\n  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project\n  updateManyProjects(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): BatchPayload!\n  upsertProject(where: ProjectWhereUniqueInput!, create: ProjectCreateInput!, update: ProjectUpdateInput!): Project!\n  deleteProject(where: ProjectWhereUniqueInput!): Project\n  deleteManyProjects(where: ProjectWhereInput): BatchPayload!\n  createTranslation(data: TranslationCreateInput!): Translation!\n  updateTranslation(data: TranslationUpdateInput!, where: TranslationWhereUniqueInput!): Translation\n  updateManyTranslations(data: TranslationUpdateManyMutationInput!, where: TranslationWhereInput): BatchPayload!\n  upsertTranslation(where: TranslationWhereUniqueInput!, create: TranslationCreateInput!, update: TranslationUpdateInput!): Translation!\n  deleteTranslation(where: TranslationWhereUniqueInput!): Translation\n  deleteManyTranslations(where: TranslationWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Project {\n  id: ID!\n  name: String!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  languages(where: LanguageWhereInput, orderBy: LanguageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Language!]\n  translations(where: TranslationWhereInput, orderBy: TranslationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Translation!]\n  literals(where: LiteralWhereInput, orderBy: LiteralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Literal!]\n}\n\ntype ProjectConnection {\n  pageInfo: PageInfo!\n  edges: [ProjectEdge]!\n  aggregate: AggregateProject!\n}\n\ninput ProjectCreateInput {\n  id: ID\n  name: String!\n  users: UserCreateManyWithoutProjectsInput\n  languages: LanguageCreateManyWithoutProjectsInput\n  translations: TranslationCreateManyWithoutProjectInput\n  literals: LiteralCreateManyWithoutProjectInput\n}\n\ninput ProjectCreateManyWithoutLanguagesInput {\n  create: [ProjectCreateWithoutLanguagesInput!]\n  connect: [ProjectWhereUniqueInput!]\n}\n\ninput ProjectCreateManyWithoutUsersInput {\n  create: [ProjectCreateWithoutUsersInput!]\n  connect: [ProjectWhereUniqueInput!]\n}\n\ninput ProjectCreateOneWithoutLiteralsInput {\n  create: ProjectCreateWithoutLiteralsInput\n  connect: ProjectWhereUniqueInput\n}\n\ninput ProjectCreateOneWithoutTranslationsInput {\n  create: ProjectCreateWithoutTranslationsInput\n  connect: ProjectWhereUniqueInput\n}\n\ninput ProjectCreateWithoutLanguagesInput {\n  id: ID\n  name: String!\n  users: UserCreateManyWithoutProjectsInput\n  translations: TranslationCreateManyWithoutProjectInput\n  literals: LiteralCreateManyWithoutProjectInput\n}\n\ninput ProjectCreateWithoutLiteralsInput {\n  id: ID\n  name: String!\n  users: UserCreateManyWithoutProjectsInput\n  languages: LanguageCreateManyWithoutProjectsInput\n  translations: TranslationCreateManyWithoutProjectInput\n}\n\ninput ProjectCreateWithoutTranslationsInput {\n  id: ID\n  name: String!\n  users: UserCreateManyWithoutProjectsInput\n  languages: LanguageCreateManyWithoutProjectsInput\n  literals: LiteralCreateManyWithoutProjectInput\n}\n\ninput ProjectCreateWithoutUsersInput {\n  id: ID\n  name: String!\n  languages: LanguageCreateManyWithoutProjectsInput\n  translations: TranslationCreateManyWithoutProjectInput\n  literals: LiteralCreateManyWithoutProjectInput\n}\n\ntype ProjectEdge {\n  node: Project!\n  cursor: String!\n}\n\nenum ProjectOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype ProjectPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput ProjectScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [ProjectScalarWhereInput!]\n  OR: [ProjectScalarWhereInput!]\n  NOT: [ProjectScalarWhereInput!]\n}\n\ntype ProjectSubscriptionPayload {\n  mutation: MutationType!\n  node: Project\n  updatedFields: [String!]\n  previousValues: ProjectPreviousValues\n}\n\ninput ProjectSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ProjectWhereInput\n  AND: [ProjectSubscriptionWhereInput!]\n  OR: [ProjectSubscriptionWhereInput!]\n  NOT: [ProjectSubscriptionWhereInput!]\n}\n\ninput ProjectUpdateInput {\n  name: String\n  users: UserUpdateManyWithoutProjectsInput\n  languages: LanguageUpdateManyWithoutProjectsInput\n  translations: TranslationUpdateManyWithoutProjectInput\n  literals: LiteralUpdateManyWithoutProjectInput\n}\n\ninput ProjectUpdateManyDataInput {\n  name: String\n}\n\ninput ProjectUpdateManyMutationInput {\n  name: String\n}\n\ninput ProjectUpdateManyWithoutLanguagesInput {\n  create: [ProjectCreateWithoutLanguagesInput!]\n  delete: [ProjectWhereUniqueInput!]\n  connect: [ProjectWhereUniqueInput!]\n  set: [ProjectWhereUniqueInput!]\n  disconnect: [ProjectWhereUniqueInput!]\n  update: [ProjectUpdateWithWhereUniqueWithoutLanguagesInput!]\n  upsert: [ProjectUpsertWithWhereUniqueWithoutLanguagesInput!]\n  deleteMany: [ProjectScalarWhereInput!]\n  updateMany: [ProjectUpdateManyWithWhereNestedInput!]\n}\n\ninput ProjectUpdateManyWithoutUsersInput {\n  create: [ProjectCreateWithoutUsersInput!]\n  delete: [ProjectWhereUniqueInput!]\n  connect: [ProjectWhereUniqueInput!]\n  set: [ProjectWhereUniqueInput!]\n  disconnect: [ProjectWhereUniqueInput!]\n  update: [ProjectUpdateWithWhereUniqueWithoutUsersInput!]\n  upsert: [ProjectUpsertWithWhereUniqueWithoutUsersInput!]\n  deleteMany: [ProjectScalarWhereInput!]\n  updateMany: [ProjectUpdateManyWithWhereNestedInput!]\n}\n\ninput ProjectUpdateManyWithWhereNestedInput {\n  where: ProjectScalarWhereInput!\n  data: ProjectUpdateManyDataInput!\n}\n\ninput ProjectUpdateOneRequiredWithoutLiteralsInput {\n  create: ProjectCreateWithoutLiteralsInput\n  update: ProjectUpdateWithoutLiteralsDataInput\n  upsert: ProjectUpsertWithoutLiteralsInput\n  connect: ProjectWhereUniqueInput\n}\n\ninput ProjectUpdateOneRequiredWithoutTranslationsInput {\n  create: ProjectCreateWithoutTranslationsInput\n  update: ProjectUpdateWithoutTranslationsDataInput\n  upsert: ProjectUpsertWithoutTranslationsInput\n  connect: ProjectWhereUniqueInput\n}\n\ninput ProjectUpdateWithoutLanguagesDataInput {\n  name: String\n  users: UserUpdateManyWithoutProjectsInput\n  translations: TranslationUpdateManyWithoutProjectInput\n  literals: LiteralUpdateManyWithoutProjectInput\n}\n\ninput ProjectUpdateWithoutLiteralsDataInput {\n  name: String\n  users: UserUpdateManyWithoutProjectsInput\n  languages: LanguageUpdateManyWithoutProjectsInput\n  translations: TranslationUpdateManyWithoutProjectInput\n}\n\ninput ProjectUpdateWithoutTranslationsDataInput {\n  name: String\n  users: UserUpdateManyWithoutProjectsInput\n  languages: LanguageUpdateManyWithoutProjectsInput\n  literals: LiteralUpdateManyWithoutProjectInput\n}\n\ninput ProjectUpdateWithoutUsersDataInput {\n  name: String\n  languages: LanguageUpdateManyWithoutProjectsInput\n  translations: TranslationUpdateManyWithoutProjectInput\n  literals: LiteralUpdateManyWithoutProjectInput\n}\n\ninput ProjectUpdateWithWhereUniqueWithoutLanguagesInput {\n  where: ProjectWhereUniqueInput!\n  data: ProjectUpdateWithoutLanguagesDataInput!\n}\n\ninput ProjectUpdateWithWhereUniqueWithoutUsersInput {\n  where: ProjectWhereUniqueInput!\n  data: ProjectUpdateWithoutUsersDataInput!\n}\n\ninput ProjectUpsertWithoutLiteralsInput {\n  update: ProjectUpdateWithoutLiteralsDataInput!\n  create: ProjectCreateWithoutLiteralsInput!\n}\n\ninput ProjectUpsertWithoutTranslationsInput {\n  update: ProjectUpdateWithoutTranslationsDataInput!\n  create: ProjectCreateWithoutTranslationsInput!\n}\n\ninput ProjectUpsertWithWhereUniqueWithoutLanguagesInput {\n  where: ProjectWhereUniqueInput!\n  update: ProjectUpdateWithoutLanguagesDataInput!\n  create: ProjectCreateWithoutLanguagesInput!\n}\n\ninput ProjectUpsertWithWhereUniqueWithoutUsersInput {\n  where: ProjectWhereUniqueInput!\n  update: ProjectUpdateWithoutUsersDataInput!\n  create: ProjectCreateWithoutUsersInput!\n}\n\ninput ProjectWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n  languages_every: LanguageWhereInput\n  languages_some: LanguageWhereInput\n  languages_none: LanguageWhereInput\n  translations_every: TranslationWhereInput\n  translations_some: TranslationWhereInput\n  translations_none: TranslationWhereInput\n  literals_every: LiteralWhereInput\n  literals_some: LiteralWhereInput\n  literals_none: LiteralWhereInput\n  AND: [ProjectWhereInput!]\n  OR: [ProjectWhereInput!]\n  NOT: [ProjectWhereInput!]\n}\n\ninput ProjectWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype Query {\n  language(where: LanguageWhereUniqueInput!): Language\n  languages(where: LanguageWhereInput, orderBy: LanguageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Language]!\n  languagesConnection(where: LanguageWhereInput, orderBy: LanguageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LanguageConnection!\n  literal(where: LiteralWhereUniqueInput!): Literal\n  literals(where: LiteralWhereInput, orderBy: LiteralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Literal]!\n  literalsConnection(where: LiteralWhereInput, orderBy: LiteralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LiteralConnection!\n  project(where: ProjectWhereUniqueInput!): Project\n  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project]!\n  projectsConnection(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!\n  translation(where: TranslationWhereUniqueInput!): Translation\n  translations(where: TranslationWhereInput, orderBy: TranslationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Translation]!\n  translationsConnection(where: TranslationWhereInput, orderBy: TranslationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TranslationConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  language(where: LanguageSubscriptionWhereInput): LanguageSubscriptionPayload\n  literal(where: LiteralSubscriptionWhereInput): LiteralSubscriptionPayload\n  project(where: ProjectSubscriptionWhereInput): ProjectSubscriptionPayload\n  translation(where: TranslationSubscriptionWhereInput): TranslationSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Translation {\n  id: ID!\n  language: Language!\n  literal: Literal!\n  project: Project!\n  translation: String!\n}\n\ntype TranslationConnection {\n  pageInfo: PageInfo!\n  edges: [TranslationEdge]!\n  aggregate: AggregateTranslation!\n}\n\ninput TranslationCreateInput {\n  id: ID\n  language: LanguageCreateOneWithoutTranslationsInput!\n  literal: LiteralCreateOneInput!\n  project: ProjectCreateOneWithoutTranslationsInput!\n  translation: String!\n}\n\ninput TranslationCreateManyWithoutLanguageInput {\n  create: [TranslationCreateWithoutLanguageInput!]\n  connect: [TranslationWhereUniqueInput!]\n}\n\ninput TranslationCreateManyWithoutProjectInput {\n  create: [TranslationCreateWithoutProjectInput!]\n  connect: [TranslationWhereUniqueInput!]\n}\n\ninput TranslationCreateWithoutLanguageInput {\n  id: ID\n  literal: LiteralCreateOneInput!\n  project: ProjectCreateOneWithoutTranslationsInput!\n  translation: String!\n}\n\ninput TranslationCreateWithoutProjectInput {\n  id: ID\n  language: LanguageCreateOneWithoutTranslationsInput!\n  literal: LiteralCreateOneInput!\n  translation: String!\n}\n\ntype TranslationEdge {\n  node: Translation!\n  cursor: String!\n}\n\nenum TranslationOrderByInput {\n  id_ASC\n  id_DESC\n  translation_ASC\n  translation_DESC\n}\n\ntype TranslationPreviousValues {\n  id: ID!\n  translation: String!\n}\n\ninput TranslationScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  translation: String\n  translation_not: String\n  translation_in: [String!]\n  translation_not_in: [String!]\n  translation_lt: String\n  translation_lte: String\n  translation_gt: String\n  translation_gte: String\n  translation_contains: String\n  translation_not_contains: String\n  translation_starts_with: String\n  translation_not_starts_with: String\n  translation_ends_with: String\n  translation_not_ends_with: String\n  AND: [TranslationScalarWhereInput!]\n  OR: [TranslationScalarWhereInput!]\n  NOT: [TranslationScalarWhereInput!]\n}\n\ntype TranslationSubscriptionPayload {\n  mutation: MutationType!\n  node: Translation\n  updatedFields: [String!]\n  previousValues: TranslationPreviousValues\n}\n\ninput TranslationSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TranslationWhereInput\n  AND: [TranslationSubscriptionWhereInput!]\n  OR: [TranslationSubscriptionWhereInput!]\n  NOT: [TranslationSubscriptionWhereInput!]\n}\n\ninput TranslationUpdateInput {\n  language: LanguageUpdateOneRequiredWithoutTranslationsInput\n  literal: LiteralUpdateOneRequiredInput\n  project: ProjectUpdateOneRequiredWithoutTranslationsInput\n  translation: String\n}\n\ninput TranslationUpdateManyDataInput {\n  translation: String\n}\n\ninput TranslationUpdateManyMutationInput {\n  translation: String\n}\n\ninput TranslationUpdateManyWithoutLanguageInput {\n  create: [TranslationCreateWithoutLanguageInput!]\n  delete: [TranslationWhereUniqueInput!]\n  connect: [TranslationWhereUniqueInput!]\n  set: [TranslationWhereUniqueInput!]\n  disconnect: [TranslationWhereUniqueInput!]\n  update: [TranslationUpdateWithWhereUniqueWithoutLanguageInput!]\n  upsert: [TranslationUpsertWithWhereUniqueWithoutLanguageInput!]\n  deleteMany: [TranslationScalarWhereInput!]\n  updateMany: [TranslationUpdateManyWithWhereNestedInput!]\n}\n\ninput TranslationUpdateManyWithoutProjectInput {\n  create: [TranslationCreateWithoutProjectInput!]\n  delete: [TranslationWhereUniqueInput!]\n  connect: [TranslationWhereUniqueInput!]\n  set: [TranslationWhereUniqueInput!]\n  disconnect: [TranslationWhereUniqueInput!]\n  update: [TranslationUpdateWithWhereUniqueWithoutProjectInput!]\n  upsert: [TranslationUpsertWithWhereUniqueWithoutProjectInput!]\n  deleteMany: [TranslationScalarWhereInput!]\n  updateMany: [TranslationUpdateManyWithWhereNestedInput!]\n}\n\ninput TranslationUpdateManyWithWhereNestedInput {\n  where: TranslationScalarWhereInput!\n  data: TranslationUpdateManyDataInput!\n}\n\ninput TranslationUpdateWithoutLanguageDataInput {\n  literal: LiteralUpdateOneRequiredInput\n  project: ProjectUpdateOneRequiredWithoutTranslationsInput\n  translation: String\n}\n\ninput TranslationUpdateWithoutProjectDataInput {\n  language: LanguageUpdateOneRequiredWithoutTranslationsInput\n  literal: LiteralUpdateOneRequiredInput\n  translation: String\n}\n\ninput TranslationUpdateWithWhereUniqueWithoutLanguageInput {\n  where: TranslationWhereUniqueInput!\n  data: TranslationUpdateWithoutLanguageDataInput!\n}\n\ninput TranslationUpdateWithWhereUniqueWithoutProjectInput {\n  where: TranslationWhereUniqueInput!\n  data: TranslationUpdateWithoutProjectDataInput!\n}\n\ninput TranslationUpsertWithWhereUniqueWithoutLanguageInput {\n  where: TranslationWhereUniqueInput!\n  update: TranslationUpdateWithoutLanguageDataInput!\n  create: TranslationCreateWithoutLanguageInput!\n}\n\ninput TranslationUpsertWithWhereUniqueWithoutProjectInput {\n  where: TranslationWhereUniqueInput!\n  update: TranslationUpdateWithoutProjectDataInput!\n  create: TranslationCreateWithoutProjectInput!\n}\n\ninput TranslationWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  language: LanguageWhereInput\n  literal: LiteralWhereInput\n  project: ProjectWhereInput\n  translation: String\n  translation_not: String\n  translation_in: [String!]\n  translation_not_in: [String!]\n  translation_lt: String\n  translation_lte: String\n  translation_gt: String\n  translation_gte: String\n  translation_contains: String\n  translation_not_contains: String\n  translation_starts_with: String\n  translation_not_starts_with: String\n  translation_ends_with: String\n  translation_not_ends_with: String\n  AND: [TranslationWhereInput!]\n  OR: [TranslationWhereInput!]\n  NOT: [TranslationWhereInput!]\n}\n\ninput TranslationWhereUniqueInput {\n  id: ID\n}\n\ntype User {\n  id: ID!\n  name: String!\n  admin: Boolean!\n  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project!]\n  languages(where: LanguageWhereInput, orderBy: LanguageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Language!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  name: String!\n  admin: Boolean\n  projects: ProjectCreateManyWithoutUsersInput\n  languages: LanguageCreateManyWithoutUsersInput\n}\n\ninput UserCreateManyWithoutLanguagesInput {\n  create: [UserCreateWithoutLanguagesInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutProjectsInput {\n  create: [UserCreateWithoutProjectsInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateWithoutLanguagesInput {\n  id: ID\n  name: String!\n  admin: Boolean\n  projects: ProjectCreateManyWithoutUsersInput\n}\n\ninput UserCreateWithoutProjectsInput {\n  id: ID\n  name: String!\n  admin: Boolean\n  languages: LanguageCreateManyWithoutUsersInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  admin_ASC\n  admin_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  admin: Boolean!\n}\n\ninput UserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  admin: Boolean\n  admin_not: Boolean\n  AND: [UserScalarWhereInput!]\n  OR: [UserScalarWhereInput!]\n  NOT: [UserScalarWhereInput!]\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  name: String\n  admin: Boolean\n  projects: ProjectUpdateManyWithoutUsersInput\n  languages: LanguageUpdateManyWithoutUsersInput\n}\n\ninput UserUpdateManyDataInput {\n  name: String\n  admin: Boolean\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n  admin: Boolean\n}\n\ninput UserUpdateManyWithoutLanguagesInput {\n  create: [UserCreateWithoutLanguagesInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  set: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutLanguagesInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutLanguagesInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutProjectsInput {\n  create: [UserCreateWithoutProjectsInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  set: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutProjectsInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutProjectsInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithWhereNestedInput {\n  where: UserScalarWhereInput!\n  data: UserUpdateManyDataInput!\n}\n\ninput UserUpdateWithoutLanguagesDataInput {\n  name: String\n  admin: Boolean\n  projects: ProjectUpdateManyWithoutUsersInput\n}\n\ninput UserUpdateWithoutProjectsDataInput {\n  name: String\n  admin: Boolean\n  languages: LanguageUpdateManyWithoutUsersInput\n}\n\ninput UserUpdateWithWhereUniqueWithoutLanguagesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutLanguagesDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutProjectsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutProjectsDataInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutLanguagesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutLanguagesDataInput!\n  create: UserCreateWithoutLanguagesInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutProjectsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutProjectsDataInput!\n  create: UserCreateWithoutProjectsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  admin: Boolean\n  admin_not: Boolean\n  projects_every: ProjectWhereInput\n  projects_some: ProjectWhereInput\n  projects_none: ProjectWhereInput\n  languages_every: LanguageWhereInput\n  languages_some: LanguageWhereInput\n  languages_none: LanguageWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  name: String\n}\n";
